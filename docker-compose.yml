version: "3.8"

services:
  app:
    build: ./docker/app
    depends_on:
      - db
      - node
      - minio
      - kvs
    volumes:
      - .:/var/www

  nginx:
    build: ./docker/nginx
    ports:
      - 80:80
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  db:
    build: ./docker/db
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      TZ: "Asia/Tokyo"
    ports:
      - "3306:3306"
    volumes:
      - db-local:/var/lib/mysql

  node:
    image: node:15.1.0-alpine3.10
    tty: true
    volumes:
      - node-local:/app/node_modules
    working_dir: /var/www

  kvs:
    image: redis:6.0
    ports:
      - "6379:6379"
    volumes:
      - kvs-local:/data

  awscli:
    image: amazon/aws-cli
    volumes:
      - .:/var/www
    depends_on:
      - app
      - minio
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - minio-local:/data
      - minio-config:/root/.minio
    environment:
      MINIO_ACCESS_KEY: $AWS_ACCESS_KEY_ID
      MINIO_SECRET_KEY: $AWS_SECRET_ACCESS_KEY
      MINIO_DOMAIN: localhost
    command: server /data

volumes:
  node-local:
    driver: 'local'
  db-local:
    driver: 'local'
  kvs-local:
    driver: 'local'
  minio-local:
    driver: 'local'
  minio-config:
    driver: 'local'
